From abb68c7bdfdc75199ce3e258e9af7dfaf37c6d73 Mon Sep 17 00:00:00 2001
From: Slavek Kabrda <bkabrda@redhat.com>
Date: Wed, 10 Dec 2014 15:40:01 +0100
Subject: [PATCH] Fix showing error message for subassistants when
 superassistant is referred to by a different alias than what's in
 settings.ASSISTANT_ROLES

---
 devassistant/bin.py                       | 3 +++
 devassistant/cli/devassistant_argparse.py | 6 +++++-
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/devassistant/bin.py b/devassistant/bin.py
index 8389049..4ea3d52 100644
--- a/devassistant/bin.py
+++ b/devassistant/bin.py
@@ -12,6 +12,9 @@ class ExecutableAssistant(assistant_base.AssistantBase):
                               required=False,
                               action='store_true')]
 
+    def get_all_names(self):
+        return [self.name] + self.aliases
+
 
 class CreatorAssistant(ExecutableAssistant):
     def get_subassistants(self):
diff --git a/devassistant/cli/devassistant_argparse.py b/devassistant/cli/devassistant_argparse.py
index 9016474..2ca1e43 100644
--- a/devassistant/cli/devassistant_argparse.py
+++ b/devassistant/cli/devassistant_argparse.py
@@ -3,6 +3,7 @@
 
 from gettext import gettext as _
 
+from devassistant import bin
 from devassistant import settings
 from devassistant.actions import HelpAction
 
@@ -49,7 +50,10 @@ def _bad_subassistant_error(self, message):
                 else:
                     self.print_usage(sys.stderr)
                     prog = getattr(action, '_prog_prefix', 'crt').split()[0]
-                    if prog in settings.ASSISTANT_ROLES:
+                    all_assistants_names = []
+                    for a in bin.TopAssistant().get_subassistants():
+                        all_assistants_names.extend(a.get_all_names())
+                    if prog in all_assistants_names:
                         not_found = 'Assistant'
                         select = 'subassistant'
                     else:
